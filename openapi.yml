openapi: 3.0.0
info:
  title: price-control API
  version: 1.0.0
paths:
  /products:
    get:
      summary: Get all products
      description: Retrieve a list of all products with their details
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique identifier for the product
                      example: 3
                    name:
                      type: string
                      description: Name of the product
                      example: Hairbrush
                    price:
                      type: number
                      format: float
                      description: Price of the product
                      example: 243
                    discount:
                      type: string
                      nullable: true
                      description: Discount applicable on the product, if any
                      example: null
                    remaining_stock:
                      type: integer
                      description: Number of items left in stock
                      example: 4
  /productPrice:
    post:
      summary: Add product price
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                price:
                  type: number
                  format: double
              required:
                - productName
                - price
      responses:
        '200':
          description: Product price added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /productDiscount:
    post:
      summary: Add product discount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                discountType:
                  type: string
                  enum:
                    - 2-for-1
                    - half-price
              required:
                - productName
                - discountType
      responses:
        '200':
          description: Product discount added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      summary: Get products by discount type
      parameters:
        - name: discountType
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2-for-1
              - half-price
      responses:
        '200':
          description: Discounted products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /product:
    post:
      summary: Add a new product
      description: Adds a new product to the inventory.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product added successfully"
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request payload"
        '500':
          description: Server error, unable to add product
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error inserting new product"
components:
  schemas:
    Product:
      type: object
      required:
        - name
        - price
        - stock
      properties:
        name:
          type: string
          description: Name of the product
          example: "Wireless Headphones"
        price:
          type: number
          format: float
          description: Price of the product
          example: 59.99
        stock:
          type: integer
          description: Stock quantity of the product
          example: 100
        description:
          type: string
          description: Description of the product
          example: "High-quality wireless headphones with noise-cancellation feature."


